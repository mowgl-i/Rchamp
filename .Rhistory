for(i in attemps){ # should instead put/add a sleep or something for the api
print(i)
chats_data<-tryCatch({chats_1 <- GET(link)},
warning = function(w){is_clip_alb <- "video missing"},
error = function(e){is_clip_alb <-"video missing"}) # try and run this request
print(chats_data$status_code)
if(chats_data$status_code == 200){
chats <- httr::content(chats_data)
print(chats$comments$message$body)
}
else{print('No chats recieved')}
}}
View(chats_1)
chats_1 <- GET(link)
View(chats_1)
httr::set_config(httr::add_headers('client-id'=client_id, 'Accept'='application/vnd.twitchtv.v5+json')
chats_2 <- GET(link)
httr::set_config(httr::add_headers('client-id'=client_id, 'Accept'='application/vnd.twitchtv.v5+json'))
chats_2 <- GET(link)
View(chats_2)
rm(chats_1
)
while(( '_next' %in% names(chats) & chats$comments[[1]]$content_offset_seconds < endofclipoffset+1)){ # so long as chat is null or the offset is less than clip offset -> next.
if (chats$`_next` != 'arstnnn_'){
link <-  paste(pre_link,vod_id,'/comments?cursor=',chats$`_next`, sep = "")
print('next != arstn')
}
else{
#paste('content_offset_seconds=',clip_offset,sep = '') don't really know why this is included., I wonder if this is supposed to skip to this part of the vod
link <- paste(pre_link,vod_id,'/comments?cursor=', sep = "")
print('from the begining')
}
for(i in attemps){ # should instead put/add a sleep or something for the api
print(i)
chats_data<-tryCatch({chats_2 <- GET(link)},
warning = function(w){is_clip_alb <- "video missing"},
error = function(e){is_clip_alb <-"video missing"}) # try and run this request
print(chats_data$status_code)
if(chats_data$status_code == 200){
chats <- httr::content(chats_data)
print(chats$comments$message$body)
}
else{print('No chats recieved')}
}}
chats$comments$message$body
chats$comments[[1]]$message$body
chats$comments[[2]]$message$body
chats = '{"comments": [[{"id":"12304987","content_offset_seconds":"0.1"}],
[{"id":"12304987","content_offset_seconds":"0.1"}]] ,
"_prev":"arsotn_",
"_next":"arstnnn_"}'
chats<-fromJSON(chats)
while(( '_next' %in% names(chats) & chats$comments[[1]]$content_offset_seconds < endofclipoffset+1)){ # so long as chat is null or the offset is less than clip offset -> next.
if (chats$`_next` != 'arstnnn_'){
link <-  paste(pre_link,vod_id,'/comments?cursor=',chats$`_next`, sep = "")
print('next != arstn')
}
else{
#paste('content_offset_seconds=',clip_offset,sep = '') don't really know why this is included., I wonder if this is supposed to skip to this part of the vod
link <- paste(pre_link,vod_id,'/comments?cursor=', sep = "")
print('from the begining')
}
for(i in attemps){ # should instead put/add a sleep or something for the api
print(i)
chats_data<-tryCatch({chats_2 <- GET(link)},
warning = function(w){is_clip_alb <- "video missing"},
error = function(e){is_clip_alb <-"video missing"}) # try and run this request
print(chats_data$status_code)
if(chats_data$status_code == 200){
chats <- httr::content(chats_data)
print(chats$comments[[2]]$message$body)
print('breaking')
break
}
else{print('No chats recieved, break')}
break
}}
messages
messages = c()
chats = '{"comments": [[{"id":"12304987","content_offset_seconds":"0.1"}],
[{"id":"12304987","content_offset_seconds":"0.1"}]] ,
"_prev":"arsotn_",
"_next":"arstnnn_"}'
chats<-fromJSON(chats)
while(( '_next' %in% names(chats) & chats$comments[[1]]$content_offset_seconds < endofclipoffset+1)){ # so long as chat is null or the offset is less than clip offset -> next.
if (chats$`_next` != 'arstnnn_'){
link <-  paste(pre_link,vod_id,'/comments?cursor=',chats$`_next`, sep = "")
print('next != arstn')
}
else{
#paste('content_offset_seconds=',clip_offset,sep = '') don't really know why this is included., I wonder if this is supposed to skip to this part of the vod
link <- paste(pre_link,vod_id,'/comments?cursor=', sep = "")
print('from the begining')
}
for(i in attemps){ # should instead put/add a sleep or something for the api
print(i)
chats_data<-tryCatch({chats_2 <- GET(link)},
warning = function(w){is_clip_alb <- "video missing"},
error = function(e){is_clip_alb <-"video missing"}) # try and run this request
print(chats_data$status_code)
if(chats_data$status_code == 200){
chats <- httr::content(chats_data)
for(comment in chats$comments){
if(comment$content_offset_seconds >= clipoffset & comment$content_offset_seconds <= endofclipoffset){
print(comment$message$body)
messages = append(messages, comment$message$body)
}
}
print('breaking')
break
}
else{print('No chats recieved, break')}
break
}}
messages
View(comment)
link <- paste(pre_link,vod_id,'/comments?content_offset_seconds',clipoffset sep = "")
link <- paste(pre_link,vod_id,'/comments?content_offset_seconds',clipoffset sep = "")
link <- paste(pre_link,vod_id,'/comments?content_offset_seconds',clipoffset, sep = "")
link
chats_2 <- GET(link)
View(chats_2)
link <- paste(pre_link,vod_id,'/comments?content_offset_seconds',clipoffset, sep = "")
link
link <- paste(pre_link,vod_id,'/comments?content_offset_seconds=',clipoffset, sep = "")
link
chats_2 <- GET(link)
View(chats_2)
chats <- httr::content(chats_data)
View(chats)
chats_data<-tryCatch({chats_2 <- GET(link)},
warning = function(w){is_clip_alb <- "video missing"},
error = function(e){is_clip_alb <-"video missing"}) # try and run this request
View(chats_data)
chats_data<-tryCatch({chats_2 <- GET(link)},
warning = function(w){is_clip_alb <- "video missing"},
error = function(e){is_clip_alb <-"video missing"}) # try and run this request
View(chats_2)
View(chats_data)
View(chats_data)
chats <- httr::content(chats_data)
View(chats)
chats = '{"comments": [[{"id":"12304987","content_offset_seconds":"0.1"}],
[{"id":"12304987","content_offset_seconds":"0.1"}]] ,
"_prev":"arsotn_",
"_next":"arstnnn_"}'
chats<-fromJSON(chats)
messages
messages = c()
messages
while(( '_next' %in% names(chats) & chats$comments[[1]]$content_offset_seconds < endofclipoffset+1)){ # so long as chat is null or the offset is less than clip offset -> next.
if (chats$`_next` != 'arstnnn_'){
link <-  paste(pre_link,vod_id,'/comments?cursor=',chats$`_next`, sep = "")
print('next != arstn')
}
else{
#paste('content_offset_seconds=',clip_offset,sep = '') don't really know why this is included., I wonder if this is supposed to skip to this part of the vod
link <- paste(pre_link,vod_id,'/comments?content_offset_seconds=',clipoffset, sep = "")
}
for(i in attemps){ # should instead put/add a sleep or something for the api
print(i)
chats_data<-tryCatch({chats_2 <- GET(link)},
warning = function(w){is_clip_alb <- "video missing"},
error = function(e){is_clip_alb <-"video missing"}) # try and run this request
print(chats_data$status_code)
if(chats_data$status_code == 200){
chats <- httr::content(chats_data)
for(comment in chats$comments){
if(comment$content_offset_seconds >= clipoffset & comment$content_offset_seconds <= endofclipoffset){
messages = append(messages, comment$message$body)
}
}
print('breaking')
break
}
else{print('No chats recieved, break')}
break
}}
messages[586]
messages[580:586]
total_comments = length(chats$comments)
chat_offset = chats$comments[[total_comments]]$content_offset_seconds
progress_number = (progress*100/clip_content$duration)
progress_number = (progress*100/clip_content$duration)
progress =  chat_offset - clipoffset
progress_number = (progress*100/clip_content$duration)
chats$comments[[total_comments]]$content_offset_seconds
clipoffset
clipoffset-chat_offset
progress =  clipoffset-chat_offset
progress*100
abs(progress*100)/clip_content$duration
clipoffset-chat_offset
chat_offset - clipoffset
(progress*100/clip_content$duration)
progress = chat_offset - clipoffset
progress*100/clip_content$duration
View(comment)
message_json = c()
users = c()
message = c()
chats = '{"comments": [[{"id":"12304987","content_offset_seconds":"0.1"}],
[{"id":"12304987","content_offset_seconds":"0.1"}]] ,
"_prev":"arsotn_",
"_next":"arstnnn_"}'
chats<-fromJSON(chats)
while(( '_next' %in% names(chats) & chats$comments[[1]]$content_offset_seconds < endofclipoffset+0.01)){ # so long as chat is null or the offset is less than clip offset -> next.
if (chats$`_next` != 'arstnnn_'){
link <-  paste(pre_link,vod_id,'/comments?cursor=',chats$`_next`, sep = "")
print('next != arstn')
}
else{
#paste('content_offset_seconds=',clip_offset,sep = '') don't really know why this is included., I wonder if this is supposed to skip to this part of the vod
link <- paste(pre_link,vod_id,'/comments?content_offset_seconds=',clipoffset, sep = "")
}
for(i in attemps){ # should instead put/add a sleep or something for the api
print(i)
chats_data<-tryCatch({chats_2 <- GET(link)},
warning = function(w){is_clip_alb <- "video missing"},
error = function(e){is_clip_alb <-"video missing"}) # try and run this request
print(chats_data$status_code)
messages_json = c(messages_json,chats$`_next`, chats$comments[[1]]$content_offset_seconds)
if(chats_data$status_code == 200){
chats <- httr::content(chats_data)
total_comments = length(chats$comments)
chat_offset = chats$comments[[total_comments]]$content_offset_seconds
progress = chat_offset - clipoffset
progress_number = (progress*100/clip_content$duration)
if(progress_number > 100){
progress_number = 100
print('Downloading 100% complete')
}
for(comment in chats$comments){
if(comment$content_offset_seconds >= clipoffset & comment$content_offset_seconds <= endofclipoffset){
messages = append(messages, comment$message$body)
users = append(users, comment$commenter$display_name)
messages_json = append(messages_json, comment)
}
}
print('breaking')
break
}
else{print('No chats recieved, break')}
break
}}
message_json = c()
chats = '{"comments": [[{"id":"12304987","content_offset_seconds":"0.1"}],
[{"id":"12304987","content_offset_seconds":"0.1"}]] ,
"_prev":"arsotn_",
"_next":"arstnnn_"}'
chats<-fromJSON(chats)
while(( '_next' %in% names(chats) & chats$comments[[1]]$content_offset_seconds < endofclipoffset+0.01)){ # so long as chat is null or the offset is less than clip offset -> next.
if (chats$`_next` != 'arstnnn_'){
link <-  paste(pre_link,vod_id,'/comments?cursor=',chats$`_next`, sep = "")
print('next != arstn')
}
else{
#paste('content_offset_seconds=',clip_offset,sep = '') don't really know why this is included., I wonder if this is supposed to skip to this part of the vod
link <- paste(pre_link,vod_id,'/comments?content_offset_seconds=',clipoffset, sep = "")
}
for(i in attemps){ # should instead put/add a sleep or something for the api
print(i)
chats_data<-tryCatch({chats_2 <- GET(link)},
warning = function(w){is_clip_alb <- "video missing"},
error = function(e){is_clip_alb <-"video missing"}) # try and run this request
print(chats_data$status_code)
messages_json = c(messages_json,chats$`_next`, chats$comments[[1]]$content_offset_seconds)
if(chats_data$status_code == 200){
chats <- httr::content(chats_data)
total_comments = length(chats$comments)
chat_offset = chats$comments[[total_comments]]$content_offset_seconds
progress = chat_offset - clipoffset
progress_number = (progress*100/clip_content$duration)
if(progress_number > 100){
progress_number = 100
print('Downloading 100% complete')
}
for(comment in chats$comments){
if(comment$content_offset_seconds >= clipoffset & comment$content_offset_seconds <= endofclipoffset){
messages = append(messages, comment$message$body)
users = append(users, comment$commenter$display_name)
messages_json = append(messages_json, comment)
}
}
print('breaking')
break
}
else{print('No chats recieved, break')}
break
}}
message_json = c()
chats = '{"comments": [[{"id":"12304987","content_offset_seconds":"0.1"}],
[{"id":"12304987","content_offset_seconds":"0.1"}]] ,
"_prev":"arsotn_",
"_next":"arstnnn_"}'
chats<-fromJSON(chats)
while(( '_next' %in% names(chats) & chats$comments[[1]]$content_offset_seconds < endofclipoffset+0.01)){ # so long as chat is null or the offset is less than clip offset -> next.
if (chats$`_next` != 'arstnnn_'){
link <-  paste(pre_link,vod_id,'/comments?cursor=',chats$`_next`, sep = "")
print('next != arstn')
}
else{
#paste('content_offset_seconds=',clip_offset,sep = '') don't really know why this is included., I wonder if this is supposed to skip to this part of the vod
link <- paste(pre_link,vod_id,'/comments?content_offset_seconds=',clipoffset, sep = "")
}
for(i in attemps){ # should instead put/add a sleep or something for the api
print(i)
chats_data<-tryCatch({chats_2 <- GET(link)},
warning = function(w){is_clip_alb <- "video missing"},
error = function(e){is_clip_alb <-"video missing"}) # try and run this request
print(chats_data$status_code)
#messages_json = c(messages_json,chats$`_next`, chats$comments[[1]]$content_offset_seconds)
if(chats_data$status_code == 200){
chats <- httr::content(chats_data)
total_comments = length(chats$comments)
chat_offset = chats$comments[[total_comments]]$content_offset_seconds
progress = chat_offset - clipoffset
progress_number = (progress*100/clip_content$duration)
if(progress_number > 100){
progress_number = 100
print('Downloading 100% complete')
}
for(comment in chats$comments){
if(comment$content_offset_seconds >= clipoffset & comment$content_offset_seconds <= endofclipoffset){
messages = append(messages, comment$message$body)
users = append(users, comment$commenter$display_name)
messages_json = append(messages_json, comment)
}
}
print('breaking')
break
}
else{print('No chats recieved, break')}
break
}}
messages_json = c()
chats = '{"comments": [[{"id":"12304987","content_offset_seconds":"0.1"}],
[{"id":"12304987","content_offset_seconds":"0.1"}]] ,
"_prev":"arsotn_",
"_next":"arstnnn_"}'
chats<-fromJSON(chats)
while(( '_next' %in% names(chats) & chats$comments[[1]]$content_offset_seconds < endofclipoffset+0.01)){ # so long as chat is null or the offset is less than clip offset -> next.
if (chats$`_next` != 'arstnnn_'){
link <-  paste(pre_link,vod_id,'/comments?cursor=',chats$`_next`, sep = "")
print('next != arstn')
}
else{
#paste('content_offset_seconds=',clip_offset,sep = '') don't really know why this is included., I wonder if this is supposed to skip to this part of the vod
link <- paste(pre_link,vod_id,'/comments?content_offset_seconds=',clipoffset, sep = "")
}
for(i in attemps){ # should instead put/add a sleep or something for the api
print(i)
chats_data<-tryCatch({chats_2 <- GET(link)},
warning = function(w){is_clip_alb <- "video missing"},
error = function(e){is_clip_alb <-"video missing"}) # try and run this request
print(chats_data$status_code)
#messages_json = c(messages_json,chats$`_next`, chats$comments[[1]]$content_offset_seconds)
if(chats_data$status_code == 200){
chats <- httr::content(chats_data)
total_comments = length(chats$comments)
chat_offset = chats$comments[[total_comments]]$content_offset_seconds
progress = chat_offset - clipoffset
progress_number = (progress*100/clip_content$duration)
if(progress_number > 100){
progress_number = 100
print('Downloading 100% complete')
}
for(comment in chats$comments){
if(comment$content_offset_seconds >= clipoffset & comment$content_offset_seconds <= endofclipoffset){
messages = append(messages, comment$message$body)
users = append(users, comment$commenter$display_name)
messages_json = append(messages_json, comment)
}
}
print('breaking')
break
}
else{print('No chats recieved, break')}
break
}}
View(messages_json)
1201/2
messages_json = c()
users = c()
message = c()
while(( '_next' %in% names(chats) & chats$comments[[1]]$content_offset_seconds < endofclipoffset+0.01)){ # so long as chat is null or the offset is less than clip offset -> next.
if (chats$`_next` != 'arstnnn_'){
link <-  paste(pre_link,vod_id,'/comments?cursor=',chats$`_next`, sep = "")
print('next != arstn')
}
else{
#paste('content_offset_seconds=',clip_offset,sep = '') don't really know why this is included., I wonder if this is supposed to skip to this part of the vod
link <- paste(pre_link,vod_id,'/comments?content_offset_seconds=',clipoffset, sep = "")
}
for(i in attemps){ # should instead put/add a sleep or something for the api
print(i)
chats_data<-tryCatch({chats_2 <- GET(link)},
warning = function(w){is_clip_alb <- "video missing"},
error = function(e){is_clip_alb <-"video missing"}) # try and run this request
print(chats_data$status_code)
#messages_json = c(messages_json,chats$`_next`, chats$comments[[1]]$content_offset_seconds)
if(chats_data$status_code == 200){
chats <- httr::content(chats_data)
total_comments = length(chats$comments)
chat_offset = chats$comments[[total_comments]]$content_offset_seconds
progress = chat_offset - clipoffset
progress_number = (progress*100/clip_content$duration)
if(progress_number > 100){
progress_number = 100
print('Downloading 100% complete')
}
for(comment in chats$comments){
if(comment$content_offset_seconds >= clipoffset & comment$content_offset_seconds <= endofclipoffset){
messages = append(messages, comment$message$body)
users = append(users, comment$commenter$display_name)
messages_json = append(messages_json, comment)
}
}
print('breaking')
break
}
else{print('No chats recieved, break')}
break
}}
messages[580:586]
messages_json = c()
users = c()
messages = c()
while(( '_next' %in% names(chats) & chats$comments[[1]]$content_offset_seconds < endofclipoffset+0.01)){ # so long as chat is null or the offset is less than clip offset -> next.
if (chats$`_next` != 'arstnnn_'){
link <-  paste(pre_link,vod_id,'/comments?cursor=',chats$`_next`, sep = "")
print('next != arstn')
}
else{
#paste('content_offset_seconds=',clip_offset,sep = '') don't really know why this is included., I wonder if this is supposed to skip to this part of the vod
link <- paste(pre_link,vod_id,'/comments?content_offset_seconds=',clipoffset, sep = "")
}
for(i in attemps){ # should instead put/add a sleep or something for the api
print(i)
chats_data<-tryCatch({chats_2 <- GET(link)},
warning = function(w){is_clip_alb <- "video missing"},
error = function(e){is_clip_alb <-"video missing"}) # try and run this request
print(chats_data$status_code)
#messages_json = c(messages_json,chats$`_next`, chats$comments[[1]]$content_offset_seconds)
if(chats_data$status_code == 200){
chats <- httr::content(chats_data)
total_comments = length(chats$comments)
chat_offset = chats$comments[[total_comments]]$content_offset_seconds
progress = chat_offset - clipoffset
progress_number = (progress*100/clip_content$duration)
if(progress_number > 100){
progress_number = 100
print('Downloading 100% complete')
}
for(comment in chats$comments){
if(comment$content_offset_seconds >= clipoffset & comment$content_offset_seconds <= endofclipoffset){
messages = append(messages, comment$message$body)
users = append(users, comment$commenter$display_name)
messages_json = append(messages_json, comment)
}
}
print('breaking')
break
}
else{print('No chats recieved, break')}
break
}}
chats = '{"comments": [[{"id":"12304987","content_offset_seconds":"0.1"}],
[{"id":"12304987","content_offset_seconds":"0.1"}]] ,
"_prev":"arsotn_",
"_next":"arstnnn_"}'
chats<-fromJSON(chats)
while(( '_next' %in% names(chats) & chats$comments[[1]]$content_offset_seconds < endofclipoffset+0.01)){ # so long as chat is null or the offset is less than clip offset -> next.
if (chats$`_next` != 'arstnnn_'){
link <-  paste(pre_link,vod_id,'/comments?cursor=',chats$`_next`, sep = "")
print('next != arstn')
}
else{
#paste('content_offset_seconds=',clip_offset,sep = '') don't really know why this is included., I wonder if this is supposed to skip to this part of the vod
link <- paste(pre_link,vod_id,'/comments?content_offset_seconds=',clipoffset, sep = "")
}
for(i in attemps){ # should instead put/add a sleep or something for the api
print(i)
chats_data<-tryCatch({chats_2 <- GET(link)},
warning = function(w){is_clip_alb <- "video missing"},
error = function(e){is_clip_alb <-"video missing"}) # try and run this request
print(chats_data$status_code)
#messages_json = c(messages_json,chats$`_next`, chats$comments[[1]]$content_offset_seconds)
if(chats_data$status_code == 200){
chats <- httr::content(chats_data)
total_comments = length(chats$comments)
chat_offset = chats$comments[[total_comments]]$content_offset_seconds
progress = chat_offset - clipoffset
progress_number = (progress*100/clip_content$duration)
if(progress_number > 100){
progress_number = 100
print('Downloading 100% complete')
}
for(comment in chats$comments){
if(comment$content_offset_seconds >= clipoffset & comment$content_offset_seconds <= endofclipoffset){
messages = append(messages, comment$message$body)
users = append(users, comment$commenter$display_name)
messages_json = append(messages_json, comment)
}
}
print('breaking')
break
}
else{print('No chats recieved, break')}
break
}}
save.image("~/GitHub/Rchamp/environment.RData")
